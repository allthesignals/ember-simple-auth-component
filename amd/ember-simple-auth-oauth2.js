define("ember-simple-auth-oauth2",["./ember-simple-auth-oauth2/authenticators/oauth2","./ember-simple-auth-oauth2/authorizers/oauth2","exports"],function(a,b,c){"use strict";var d=a.OAuth2,e=b.OAuth2;c.Authenticator=d,c.Authorizer=e}),define("ember-simple-auth-oauth2/authenticators/oauth2",["exports"],function(a){"use strict";var b="undefined"!=typeof window?window:{},c=b.Ember,d=c.SimpleAuth.Authenticators.Base.extend({serverTokenEndpoint:"/token",refreshAccessTokens:!0,_refreshTokenTimeout:null,restore:function(a){var b=this;return new c.RSVP.Promise(function(d,e){if(c.isEmpty(a.access_token))e();else{var f=(new Date).getTime();!c.isEmpty(a.expires_at)&&a.expires_at<f?b.refreshAccessTokens?b.refreshAccessToken(a.expires_in,a.refresh_token).then(function(a){d(a)},e):e():(b.scheduleAccessTokenRefresh(a.expires_in,a.expires_at,a.refresh_token),d(a))}})},authenticate:function(a){var b=this;return new c.RSVP.Promise(function(d,e){var f={grant_type:"password",username:a.identification,password:a.password};b.makeRequest(f).then(function(a){c.run(function(){var e=b.absolutizeExpirationTime(a.expires_in);b.scheduleAccessTokenRefresh(a.expires_in,e,a.refresh_token),d(c.$.extend(a,{expires_at:e}))})},function(a){c.run(function(){e(a.responseJSON||a.responseText)})})})},invalidate:function(){return c.run.cancel(this._refreshTokenTimeout),delete this._refreshTokenTimeout,new c.RSVP.resolve},makeRequest:function(a){return c.SimpleAuth.Utils.isSecureUrl(this.serverTokenEndpoint)||c.Logger.warn("Credentials are transmitted via an insecure connection - use HTTPS to keep them secure."),c.$.ajax({url:this.serverTokenEndpoint,type:"POST",data:a,dataType:"json",contentType:"application/x-www-form-urlencoded"})},scheduleAccessTokenRefresh:function(a,b,d){if(this.refreshAccessTokens){var e=(new Date).getTime();c.isEmpty(b)&&!c.isEmpty(a)&&(b=new Date(e+1e3*a).getTime());var f=1e3*(Math.floor(15*Math.random())+5);!c.isEmpty(d)&&!c.isEmpty(b)&&b>e-f&&(c.run.cancel(this._refreshTokenTimeout),delete this._refreshTokenTimeout,this._refreshTokenTimeout=c.run.later(this,this.refreshAccessToken,a,d,b-e-f))}},refreshAccessToken:function(a,b){var d=this,e={grant_type:"refresh_token",refresh_token:b};return new c.RSVP.Promise(function(f,g){d.makeRequest(e).then(function(e){c.run(function(){a=e.expires_in||a,b=e.refresh_token||b;var g=d.absolutizeExpirationTime(a),h=c.$.extend(e,{expires_in:a,expires_at:g,refresh_token:b});d.scheduleAccessTokenRefresh(a,null,b),d.trigger("sessionDataUpdated",h),f(h)})},function(a,b,d){c.Logger.warn("Access token could not be refreshed - server responded with "+d+"."),g()})})},absolutizeExpirationTime:function(a){return c.isEmpty(a)?void 0:new Date((new Date).getTime()+1e3*(a-5)).getTime()}});a.OAuth2=d}),define("ember-simple-auth-oauth2/authorizers/oauth2",["exports"],function(a){"use strict";var b="undefined"!=typeof window?window:{},c=b.Ember,d=c.SimpleAuth.Authorizers.Base.extend({authorize:function(a,b){var d=this.get("session.access_token");this.get("session.isAuthenticated")&&!c.isEmpty(d)&&(c.SimpleAuth.Utils.isSecureUrl(b.url)||c.Logger.warn("Credentials are transmitted via an insecure connection - use HTTPS to keep them secure."),a.setRequestHeader("Authorization","Bearer "+d))}});a.OAuth2=d});